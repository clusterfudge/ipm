#!/bin/bash
set -Eeu

function help() {
  description
  usage
}


function create() {
  if [ $# -lt 2 ]; then
    usage
    return
  fi

  WORKSPACE_FILE=$(pwd)/.ipm-workspace

  if [ ! -f $WORKSPACE_FILE ]; then
    echo "This is not an ipm workspace directory."
    return
  fi
  WORKSPACE_DIR=$(cat $WORKSPACE_FILE)
  ORG_NAME=$1
  NAME=$2
  FORCE=false
  if [ $# -gt 2 ]; then
    if [ "$3" == "-f" ]; then
      FORCE=$3
    fi
  fi

  DIR_NAME=$(pwd)/$NAME
  if [[ -d "$DIR_NAME" && "$FORCE" != "-f" ]]; then
    echo "Project directory already exists. Aborting. Use -f to force create (files will be backed up)"
  else
    mkdir -p $DIR_NAME
  fi

  backup_file $DIR_NAME/build.xml
  cat $IPM_DIR/.templates/build.xml | sed "s/%%PROJECT_NAME%%/$NAME/g" > $DIR_NAME/build.xml
  backup_file $DIR_NAME/ivy.xml
  cat $IPM_DIR/.templates/ivy.xml | sed "s/%%PROJECT_NAME%%/$NAME/g" | sed "s/%%ORGANIZATION_NAME%%/$ORG_NAME/g" > $DIR_NAME/ivy.xml
  backup_file $DIR_NAME/build.properties
  cat $IPM_DIR/.templates/build.properties | sed "s|%%WORKSPACE_DIR%%|$WORKSPACE_DIR|g" > $DIR_NAME/build.properties

  mkdir -p $IPM_DIR/src
  mkdir -p $IPM_DIR/test
  mkdir -p $IPM_DIR/lib
}

function description() {
  echo "project management tools"
}

function backup_file() {
  if [ -f $1 ]; then
    mv $1 $1.bak
  fi
}

function usage() {
  echo "create <organization name> <project name>"
}

COMMAND=$1
shift
$COMMAND $@

